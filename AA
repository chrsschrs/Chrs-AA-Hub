--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v24=nil;function v24()local v39,v40,v41,v42=v2(v16,v19,v19 + 2 + 1);v19=v19 + 4;return (v42 * (1954602 + 14822614)) + (v41 * 65536) + (v40 * (140 + 116)) + v39;end v25=nil;v18=4;end if (v18==7) then function v30(v31,v32,v33)local v43=v31[1];local v44=v31[2];local v45=v31[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1;local function v71()local v76=v43;local v77=Const;local v78=v44;local v79=v45;local v80=v28;local v81={};local v82={};local v83={};for v91=0 + 0,v70 do if ((v91>=v79) or (((2420 -(1201 + 769)) + 139)==(1433 -(300 + 800)))) then v81[v91-v79]=v69[v91 + (1 -0)];else v83[v91]=v69[v91 + 1];end end local v84=(v70-v79) + ((1801 -658) -(10 + 1132));local v85;local v86;while true do local v92=0 + 0 + 0;while true do if ((v92==(0 + 0 + (0 -0))) or ((3095 -(377 + 599))>(2883 + 1171))) then v85=v76[v67];v86=v85[1];v92=3 -2;end if (((226 + 384)>=((130 -72) + 66)) and (1==v92)) then if ((4636==(11151 -(13049 -6534))) and (v86<=7)) then if ((2257<=(393 + 2525)) and (v86<=(14 -11))) then if (((1659 + 133)<(9792 -6049)) and (v86<=(4 -3))) then if (((5384 -(341 + 1134))==(782 + 3127)) and (v86>((0 -0) + 0))) then if (((4076 -(403 + 525))<=(3914 + 492)) and (v83[v85[767 -(329 + 436)]]==v85[6 -2])) then v67=v67 + (1 -0);else v67=v85[386 -(358 + 25)];end else local v105=0;local v106;while true do if (((0 + 0)==v105) or ((3718 + 66)>(20411 -15702))) then v106=v85[4 -2];v83[v106]=v83[v106]();break;end end end elseif (((1780 -1081)<=1604) and (v86==(4 -2))) then local v107=354 -(218 + 136);local v108;while true do if (((5450 -4359)<=(5615 -3993)) and (v107==(0 + 0))) then v108=v85[1 + 1 + 0];v83[v108]=v83[v108](v13(v83,v108 + 1 + 0,v85[3]));break;end end else local v109=0 -0;local v110;local v111;local v112;while true do if (((121 + 79)==200) and ((0 -0)==v109)) then v110=(0 + 0) -0;v111=nil;v109=1066 -(51 + 1014);end if ((v109==(1006 -(66 + 939))) or ((7581 -(3325 + 2596))>=(2676 -(41 + 742 + 52)))) then v112=nil;while true do if ((v110==(1 -0)) or (3826<=(212 + 189))) then while true do if (((1580 -(59 + 468 + 661))<1473) and (v111==(0 + 0))) then v112=v85[35 -(24 + 9)];v83[v112]=v83[v112](v13(v83,v112 + (1 -0),v68));break;end end break;end if (((0 + 0)==v110) or ((11391 -7529)<((2171 -(30 + 261)) -(57 + 144 + 259)))) then v111=(0 -0) + 0;v112=nil;v110=579 -(80 + 498);end end break;end end end elseif (((680 + 2483)>=(10603 -(25073 -17276))) and (v86<=(4 + 1))) then if (((3970 -(178 + 192))==(9965 -(13383 -7018))) and (v86>((220 -(16 + 194)) -6))) then local v113=0 + 0;local v114;local v115;while true do if (((1944 -(443 + 899))<(267 + 3465)) and ((1 + 0 + 0)==v113)) then v83[v114 + (1972 -(1444 + 527))]=v115;v83[v114]=v115[v85[1 + 3]];break;end if (((1192 + 2368)>=3189) and (v113==((1136 + 389) -(1122 + 403)))) then v114=v85[1 + 1 + 0];v115=v83[v85[3 + 0]];v113=1;end end else local v116=0;local v117;local v118;while true do if (((0 -0)==v116) or ((3995 -(1024 + 75))>=(930 + 3613))) then v117=978 -(819 + 159);v118=nil;v116=1 -0;end if (((3646 -2053)==((543 + 2990) -(1609 + (393 -(4 + 58))))) and (v116==((469 + 954) -(51 + (2491 -(618 + 502)))))) then while true do if ((((5500 -1290) -2004)>=(1867 -(296 + 999))) and (v117==((0 -0) + 0))) then v118=v85[(297 -(290 + 3)) -2];v83[v118](v13(v83,v118 + 1 + 0,v85[2 + 1]));break;end end break;end end end elseif (((3123 -((1976 -(619 + 868)) + 556))<((9262 -(391 + 339)) -(7580 -(492 + 642)))) and (v86==6)) then v83[v85[(28 -(5 + 18)) -3]]=v30(v78[v85[10 -7]],nil,v33);else v67=v85[4 -(1 + 0)];end elseif ((v86<=(1626 -(285 + 232 + 1098))) or ((106 + (8951 -5903))>(4803 -(881 + 374)))) then if (((262 + 57)<(1209 -(1994 -(1357 + 35)))) and (v86<=(39 -(50 -20)))) then if (((6286 -(459 + 1249))>=3785) and (v86>8)) then local v120=0 -0;local v121;local v122;local v123;local v124;while true do if ((2901<(1789 + 2014)) and (v120==(4 -(3 -1)))) then for v139=v121,v68 do local v140=(0 -0) -(0 -0);local v141;local v142;while true do if (((0 -0)==v140) or ((4017 -2615)>=(4341 -2837))) then v141=0;v142=nil;v140=1 + 0;end if ((v140==((7 -5) -1)) or (((1847 -1066) + 1052)>((1159 -780) + 1494))) then while true do if ((((1922 -1120) + 1298)>((10845 -6642) -3288)) and (v141==0)) then v142=0;while true do if (((3505 -((3506 -2619) + 131))>=((2449 + 1408) -2539)) and (v142==0)) then v124=v124 + (2 -(4 -3));v83[v139]=v122[v124];break;end end break;end end break;end end end break;end if (((13049 -9567)==3482) and (v120==(0 -(0 + 0)))) then local v138=0;while true do if ((v138==(382 -((574 -360) + 167))) or (599<(1059 -534))) then v120=4 -(3 + 0);break;end if ((v138==(1667 -(1495 + 172))) or ((74 + 77)>(1760 -(706 + 86)))) then v121=v85[2];v122,v123=v80(v83[v121](v13(v83,v121 + 1 + 0 + 0,v85[3])));v138=1 + 0;end end end if ((v120==1) or ((2651 -(524 + 489))>(1663 + (505 -305)))) then v68=(v123 + v121) -(1 + 0);v124=(0 + 0) -(0 -0);v120=1 + 1;end end else v83[v85[4 -2]]();end elseif ((v86>10) or ((4673 -(210 + 586))==(15882 -(11168 -(9 + 275))))) then do return;end else v83[v85[2 + 0]]=v83[v85[3]][v85[4]];end elseif ((v86<=(33 -20)) or (4294<=(2759 -(472 + 874)))) then if ((v86==(1957 -(451 + 1494))) or ((4 + 2036)==(5403 -(181 + 706)))) then for v128=v85[(1 -0) + 1],v85[1197 -(855 + 339)] do v83[v128]=nil;end else v83[v85[3 -1]]=v33[v85[(1162 -(250 + 909)) + 0]];end elseif (((419 + 2050)==2469) and (v86<=(1567 -(1471 + 82)))) then v83[v85[(21 + 133) -(129 + 23)]]=v83[v85[3]];elseif ((v86==15) or ((8814 -5474)<=(4318 -(734 + 727)))) then if ((v85[(1305 -(601 + 702)) -0]==v83[v85[9 -5]]) or ((3579 -879)==(3759 -(48 + 33)))) then v67=v67 + (2 -1);else v67=v85[6 -3];end else v83[v85[632 -((1928 -1481) + 183)]]=v85[3];end v67=v67 + (512 -(341 + (1054 -(157 + 727))));break;end end end end A,B=v28(v11(v71));if  not A[1] then local v87=0;local v88;while true do if (v87==0) then v88=v31[4][v67] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (2==v18) then function v22()local v46=(555 -358) -(177 + 20);local v47;while true do if (v46==(0 + 0)) then v47=v2(v16,v19,v19);v19=v19 + (2 -1);v46=1;end if (v46==(1 -0)) then return v47;end end end v23=nil;function v23()local v48=0 -0;local v49;local v50;while true do if (1==v48) then return (v50 * (135 + 33 + (145 -57))) + v49;end if (v48==0) then v49,v50=v2(v16,v19,v19 + (2 -0));v19=v19 + (4 -2);v48=1 + 0;end end end v18=3;end if (v18==6) then v29=nil;function v29()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51==(599 -(575 + 22))) then v56=nil;v57=nil;v51=3;end if (1==v51) then v54=nil;v55=nil;v51=2;end if (v51~=3) then else v58=nil;v59=nil;v51=4;end if ((6 -2)~=v51) then else while true do if (v52~=1) then else local v93=0;while true do if (v93~=(0 + 0)) then else local v99=0 + 0;while true do if (v99==(0 + 0)) then v55=nil;v56=nil;v99=1 + 0;end if (v99~=(1 + 0)) then else v93=1;break;end end end if (v93==(114 -(76 + 37))) then v52=158 -(83 + 73);break;end end end if (v52~=(0 -0)) then else v53=0;v54=nil;v52=464 -(146 + 317);end if (v52~=3) then else v59=nil;while true do local v97=701 -(195 + 506);local v98;while true do if (v97==(0 + 0)) then v98=0;while true do if (1~=v98) then else if (v53==2) then local v101=0 + 0;local v102;while true do if (v101==(520 -(401 + 119))) then v102=331 -(219 + 112);while true do if (v102~=(1328 -(340 + 987))) then else for v145=1,v24() do local v146=0;local v147;while true do if (v146==0) then v147=v22();if (v21(v147,1987 -(792 + 1194),432 -(306 + 125))==(0 -0)) then local v158=0;local v159;local v160;local v161;local v162;while true do if ((0 + 0)~=v158) then else v159=0;v160=nil;v158=1 + 0;end if (v158~=1) then else v161=nil;v162=nil;v158=2;end if ((855 -(81 + 772))==v158) then while true do if (v159==(1762 -(1285 + 474))) then if (v21(v161,3,3)~=(1175 -(1082 + 92))) then else v162[3 + 1]=v59[v162[7 -3]];end v54[v145]=v162;break;end if (v159==0) then local v167=0;while true do if (0==v167) then v160=v21(v147,6 -4,3);v161=v21(v147,4,6 + 0);v167=1 -0;end if (v167==1) then v159=1 -0;break;end end end if (v159~=(347 -(173 + 172))) then else local v168=0 -0;while true do if (v168==0) then if (v21(v161,1,3 -2)~=1) then else v162[1 + 1]=v59[v162[1534 -(1127 + 405)]];end if (v21(v161,2,4 -2)==1) then v162[744 -(233 + 508)]=v59[v162[1979 -(1637 + 339)]];end v168=1 + 0;end if ((244 -(218 + 25))==v168) then v159=753 -(215 + 535);break;end end end if (v159==1) then local v169=0;while true do if (v169==1) then v159=2;break;end if (v169==(0 -0)) then v162={v23(),v23(),nil,nil};if (v160==(0 + 0)) then local v177=0;while true do if (v177==(0 -0)) then v162[3 + 0]=v23();v162[4]=v23();break;end end elseif (v160==(1 + 0)) then v162[3]=v24();elseif (v160==(1 + 1)) then v162[3]=v24() -(2^16);elseif (v160~=(459 -(310 + 146))) then else local v182=595 -(132 + 463);local v183;local v184;while true do if (v182~=0) then else v183=0;v184=nil;v182=1448 -(509 + 938);end if (v182~=(3 -2)) then else while true do if (v183==(0 + 0)) then v184=0 -0;while true do if (v184~=0) then else v162[3]=v24() -(2^16);v162[1 + 3]=v23();break;end end break;end end break;end end end v169=1647 -(708 + 938);end end end end break;end end end break;end end end v53=3;break;end if (v102==(0 -0)) then for v148=1,v58 do local v149=0;local v150;local v151;while true do if (v149~=(0 -0)) then else local v155=0;local v156;while true do if (v155~=(849 -(776 + 73))) then else v156=0;while true do if (v156~=0) then else local v165=0;while true do if (v165==0) then v150=v22();v151=nil;v165=1182 -(440 + 741);end if (v165==1) then v156=1133 -(567 + 565);break;end end end if (v156~=1) then else v149=1;break;end end break;end end end if (v149~=1) then else if (v150==1) then v151=v22()~=0;elseif (v150==(1530 -(1396 + 132))) then v151=v25();elseif (v150==3) then v151=v26();end v59[v148]=v151;break;end end end v57[2 + 1]=v22();v102=1;end end break;end end end if (v53~=(0 -0)) then else local v103=51 -(36 + 15);local v104;while true do if ((833 -(130 + 703))~=v103) then else v104=0 -0;while true do if (v104~=1) then else v56={};v53=1;break;end if (v104~=(0 + 0)) then else v54={};v55={};v104=1;end end break;end end end break;end if ((1364 -(1327 + 37))~=v98) then else local v100=0 -0;while true do if (v100==(0 -0)) then if (v53~=1) then else local v131=0;while true do if (v131~=0) then else local v144=0 + 0;while true do if (v144~=0) then else v57={v54,v55,nil,v56};v58=v24();v144=1;end if (1~=v144) then else v131=1 + 0;break;end end end if (v131~=1) then else v59={};v53=1 + 1;break;end end end if ((2 + 1)~=v53) then else local v132=0;local v133;while true do if (v132~=(0 -0)) then else v133=0;while true do local v152=280 -(148 + 132);local v153;while true do if (v152~=0) then else v153=0 -0;while true do if (v153~=0) then else if (v133~=(557 -(486 + 71))) then else local v164=0;while true do if (v164~=0) then else for v170=1 -0,v24() do v55[v170-(1 + 0)]=v29();end for v172=1,v24() do v56[v172]=v24();end v164=1;end if (v164==(3 -2)) then v133=1;break;end end end if (v133~=(1 + 0)) then else return v57;end break;end end break;end end end break;end end end v100=1319 -(157 + 1161);end if (v100==1) then v98=1;break;end end end end break;end end end break;end if (v52~=(2 + 0)) then else local v94=0;while true do if (0~=v94) then else v57=nil;v58=nil;v94=1;end if (v94==(985 -(309 + 675))) then v52=3;break;end end end end break;end if (v51~=0) then else v52=0;v53=nil;v51=423 -(237 + 185);end end end v30=nil;v18=7;end if (5==v18) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v34,v35,v36)if v36 then local v72=0 -(0 + 0);local v73;while true do if (v72==(1837 -(897 + 940))) then v73=(v34/((2 + 0)^(v35-1)))%((832 -(306 + 524))^(((v36-1) -(v35-((7 -5) -1))) + (1620 -((2378 -(218 + 1372)) + 831))));return v73-(v73%(791 -(63 + 727)));end end else local v74=(697 -(181 + 305 + 209))^(v35-(805 -(133 + 671)));return (((v34%(v74 + v74))>=v74) and 1) or ((0 -0) -0);end end v22=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v37)if (v2(v37,2)==79) then v20=v1(v4(v37,1,1));return "";else local v75=v3(v1(v37,16));if v20 then local v89=0;local v90;while true do if (v89==0) then v90=v6(v75,v20);v20=nil;v89=1;end if (1==v89) then return v90;end end else return v75;end end end);v18=1;end if (v18==4) then function v25()local v60=660 -((734 -153) + 79);local v61;local v62;while true do if (v60==(3 -2)) then return (( -(2 + 0) * v21(v62,382 -(190 + 160))) + (3 -2)) * ((991 -(545 + (1397 -953)))^(v21(v62,11 + (34 -24),15 + 16) -((4982 -(11 + 1742)) -2206))) * ((((v21(v62,(1 + 0) -0,87 -67) * ((1 + 1)^(4 + 28))) + v61)/(((8 -5) -1)^(94 -((1669 -(1303 + 350)) + 26)))) + (638 -(166 + 471)));end if (v60==0) then v61=v24();v62=v24();v60=1;end end end v26=nil;function v26(v38)local v63;if  not v38 then v38=v24();if (v38==(763 -(226 + 537))) then return "";end end v63=v4(v16,v19,(v19 + v38) -(1 + 0));v19=v19 + v38;local v64={};for v65=1 + 0, #v63 do v64[v65]=v3(v2(v4(v63,v65,v65)));end return v7(v64);end v18=5;end end end vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
